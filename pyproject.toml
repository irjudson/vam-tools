[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vam-tools"
version = "2.0.0"
description = "Visual Asset Management tools for organizing and managing photo/video libraries"
authors = [
    {name = "Ivan R. Judson", email = "irjudson@gmail.com"}
]
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics",
    "Topic :: System :: Archiving",
    "Topic :: Utilities",
]
dependencies = [
    "Pillow>=9.0.0,<12.0.0",
    "pillow-heif>=0.10.0,<1.0.0",
    "pyexiftool>=0.5.0,<1.0.0",
    "click>=8.0.0,<9.0.0",
    "rich>=13.0.0,<14.0.0",
    "arrow>=1.2.0,<2.0.0",
    "fastapi>=0.104.0,<1.0.0",
    "uvicorn[standard]>=0.24.0,<1.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "PyWavelets>=1.4.0,<2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0,<9.0.0",
    "pytest-cov>=4.0.0,<7.0.0",
    "black>=22.0.0,<25.0.0",
    "flake8>=4.0.0,<8.0.0",
    "flake8-docstrings>=1.7.0,<2.0.0",
    "flake8-bugbear>=24.0.0,<25.0.0",
    "mypy>=0.950,<2.0.0",
    "isort>=5.10.0,<6.0.0",
    "types-Pillow>=9.0.0,<11.0.0",
    "httpx>=0.24.0,<1.0.0",
    "pre-commit>=3.0.0,<5.0.0",
    "bandit[toml]>=1.7.0,<2.0.0",
]
gpu = [
    # GPU acceleration for perceptual hash computation
    # Install with: pip install -e ".[gpu]"
    # Or from PyPI index: pip install torch torchvision --index-url https://download.pytorch.org/whl/cu124
    "torch>=2.0.0",
    "torchvision>=0.15.0",
]
gpu-search = [
    # Fast similarity search with FAISS
    # Install with: pip install -e ".[gpu-search]"
    # Note: faiss-gpu not available via pip; using CPU version
    # For GPU support, install via conda: conda install -c conda-forge faiss-gpu
    "faiss-cpu>=1.7.4",
]
gpu-all = [
    # Complete GPU acceleration stack
    # Install with: pip install -e ".[gpu-all]"
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "faiss-cpu>=1.7.4",
]

[project.scripts]
vam-analyze = "vam_tools.cli.analyze:analyze"
vam-organize = "vam_tools.cli.organize:organize"
vam-web = "vam_tools.cli.web:web"

[project.urls]
Homepage = "https://github.com/irjudson/lightroom-tools"
Repository = "https://github.com/irjudson/lightroom-tools"
Issues = "https://github.com/irjudson/lightroom-tools/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["vam_tools*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
skip_gitignore = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    'tests/',
]

[[tool.mypy.overrides]]
module = "exiftool.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pillow_heif.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pywt.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "torch.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "torchvision.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "faiss.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pyopencl.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--cov=vam_tools",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
omit = [
    "tests/*",
]

[tool.bandit]
exclude_dirs = ["tests", ".venv", "venv"]
skips = ["B101"]  # Skip assert_used in tests
